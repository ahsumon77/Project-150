#include "iGraphics.h"
#include<iostream>
using namespace std;


int scr_height, scr_width;
int bird_x, bird_y;
int r, g, b;
int dx, dy;
int bow_x, bow_y;
int bow_dir;
int arrow_dir;
int arrow_x, arrow_y;
int release_arrow;
int num_arrow;

int ind;
int kill;
char* str = "Score :";
char* scr = "00";
bool sound_on;
int tail_y;
int up_peak_x, up_peak_y;
int down_peak_x, down_peak_y;
int peak_open;
int string_potential;
int arrow_speed;
int string_x, string_y;
int obstacle_1_x, obstacle_2_x;
int obstacle_length, obstacle_width;
int ob_1_dif, ob_2_dif;
int bird_gone, bird_cycle;
int obs_1_height, obs_2_height;
bool obstacle_on;
char score[200][10] = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20",
                        "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40",
                        "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", 
                        "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", 
      "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", 
      "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120",
      "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", "138", "139", "140",
      "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160",
      "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", "178", "179", "180",
      "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", "198", "199"};



int special_bird, gold, devil;
int write_x, write_y;

bool start;
bool instruction;
bool dev;
bool pause;
int box;
char ok[100] = { "photos\\1.BMP" };


void environment()
{
 box = 0;
 start = false;
 instruction = false;
 dev = false;
 pause = false;

 string_potential = 0;
 kill = 0;
 bird_gone = 0;

 bird_x = 0;
 bird_y = 0;
 ind = 0;
 scr_height = 1050;
 scr_width = 1910;
 num_arrow = 5;
 dx = 5;
 dy = 2;
 bow_x = -700;
 
 arrow_x = -700;
 arrow_y = 0;
 bow_dir = 1;
 arrow_dir = bow_dir;

 obstacle_2_x = 810;
 obstacle_length = 200;
 obstacle_width = 20;
 ob_1_dif = 10;
 ob_2_dif = 15;
 bird_cycle = 40;
 obs_1_height = 500;
 obs_2_height = 530;
 obstacle_on = true;
 gold = 3; 
 devil = 2;
 write_x = write_y = 700;
 tail_y = 15;
 
}


void iDraw()
{
 
 iClear();
 //iShowBMP2(0, 0, ok, 0);
 if (start == false && dev == false && instruction == false)
 {

  iSetColor(150, 150, 255);
  iFilledRectangle(0, 0, 1910, 1050);
  if (box == 1)
  {
   iSetColor(0, 255, 0);
   iFilledRectangle(835, 665, 210, 90);
  }
  else if (box == 2)
  {
   iSetColor(0, 255, 255);
   iFilledRectangle(785, 495, 310, 90);
  }
  else if (box == 3)
  {
   iSetColor(255, 0, 255);
   iFilledRectangle(765, 295, 360, 90);
  }

  iSetColor(0, 0, 0);
  iFilledRectangle(840,670,200, 80);
  iSetColor(0,rand() % 255,0);

  if (pause)
  {
   iText(880, 700, "CONTINUE", GLUT_BITMAP_TIMES_ROMAN_24);
  }
  else
  {
   iText(900, 700, "START", GLUT_BITMAP_TIMES_ROMAN_24);
  }

  
  iSetColor( 0, 0, 0);
  iFilledRectangle(790, 500, 300, 80);
  iSetColor(0, 255, 255);
  iText(855, 530, "ABOUT  GAME", GLUT_BITMAP_TIMES_ROMAN_24);
  
  iSetColor(0,  0, 0);
  iFilledRectangle(770, 300, 350, 80);
  iSetColor(255, 0, 255);
  iText(830, 330, "ABOUT  DEVELOPER", GLUT_BITMAP_TIMES_ROMAN_24);

  iSetColor(255, 255, 0);
  //iEllipse(bird_x + 190, bird_y + 900, 23, 23);
  
  iLine(bird_x + 205, bird_y + 885, bird_x + 215, bird_y + 882);

  iLine(bird_x + 210, bird_y + 895, bird_x + 215, bird_y + 882);

iLine(bird_x + 210, bird_y + 895, bird_x + 213, bird_y + 905);

  iLine(bird_x + 213, bird_y + 905, bird_x + 210, bird_y + 915);

  iLine(bird_x + 210, bird_y + 915, bird_x + 200, bird_y + 922);

  iLine(bird_x + 200, bird_y + 922, bird_x + 185, bird_y + 924);

  iLine(bird_x + 185, bird_y + 924, bird_x + 165, bird_y + 915);

  iLine(bird_x + 205, bird_y + 885, bird_x + 195, bird_y + 887);

  iLine(bird_x + 195, bird_y + 887, bird_x + 185, bird_y + 885);

  iLine(bird_x + 185, bird_y + 885, bird_x + 160, bird_y + 873);

  iLine(bird_x + 160, bird_y + 873, bird_x + 140, bird_y + 860);

  iLine(bird_x + 70, bird_y + 865, bird_x + 85, bird_y + 865);
  iLine(bird_x + 70, bird_y + 890, bird_x + 85, bird_y + 890);
  
  //

  //iLine(bird_x + 205, bird_y + 850, bird_x + 215, bird_y + 847);

  //iLine(bird_x + 30, bird_y + 890, bird_x + 70, bird_y + 895);
  //iLine(bird_x + 30, bird_y + 890, bird_x + 70, bird_y + 890);

  iLine(bird_x + tail_y + 28, bird_y + tail_y + 880, bird_x + 70, bird_y + 890);
  iLine(bird_x + tail_y + 28, bird_y + tail_y + 880, bird_x + 70, bird_y + 885);

  iLine(bird_x + tail_y + 31, bird_y + tail_y + 870, bird_x + 70, bird_y + 885);
  iLine(bird_x + tail_y + 31, bird_y + tail_y + 870, bird_x + 70, bird_y + 878);

  iLine(bird_x + tail_y + 33, bird_y + tail_y + 860, bird_x + 70, bird_y + 875);
  iLine(bird_x + tail_y + 33, bird_y + tail_y + 860, bird_x + 70, bird_y + 880);

  iLine(bird_x + tail_y + 35, bird_y + tail_y + 855, bird_x + 70, bird_y + 875);
  iLine(bird_x + tail_y + 35, bird_y + tail_y + 855, bird_x + 70, bird_y + 870);

  iLine(bird_x + tail_y + 40, bird_y + tail_y + 850, bird_x + 70, bird_y + 870);
  iLine(bird_x + tail_y + 40, bird_y + tail_y + 850, bird_x + 70, bird_y + 865);
  
  


  iLine(bird_x + 85, bird_y + 865, bird_x + 110, bird_y + 860);
  //

  iLine(bird_x + 85, bird_y + 890, bird_x + 110, bird_y + 895);

  iLine(bird_x + 110, bird_y + 895, bird_x + 130, bird_y + 905);


  int x = 1;
  if (x)
  {
   iLine(bird_x + 140, bird_y + 860, bird_x + 130, bird_y + 860);
   iLine(bird_x + 130, bird_y + 860, bird_x + 110, bird_y + 860);


   iLine(bird_x + 165, bird_y + 910, bird_x + 160, bird_y + 930);
   iLine(bird_x + 130, bird_y + 900, bird_x + 130, bird_y + 920);

   iLine(bird_x + 150, bird_y + 950, bird_x + 160, bird_y + 930);
   iLine(bird_x + 120, bird_y + 940, bird_x + 130, bird_y + 920);

   iLine(bird_x + 150, bird_y + 950, bird_x + 130, bird_y + 960);
   iLine(bird_x + 120, bird_y + 940, bird_x + 110, bird_y + 950);

   iLine(bird_x + 90, bird_y + 960, bird_x + 130, bird_y + 960);
   iLine(bird_x + 90, bird_y + 960, bird_x + 110, bird_y + 950);


   iLine(bird_x + 90, bird_y + 950, bird_x + 100, bird_y + 940);
   iLine(bird_x + 100, bird_y + 948, bird_x + 120, bird_y + 940);
   iLine(bird_x + 100, bird_y + 948, bird_x + 90, bird_y + 950);

   iLine(bird_x + 100, bird_y + 940, bird_x + 110, bird_y + 920);
   iLine(bird_x + 110, bird_y + 920, bird_x + 110, bird_y + 895);
   
   //iLine(bird_x + 100, bird_y + 948, bird_x + 90, bird_y + 950);
  }
  else
  {
   iLine(bird_x + 165, bird_y + 915, bird_x + 130, bird_y + 905);

   iLine(bird_x + 165, bird_y + 905, bird_x + 155, bird_y + 880);
   iLine(bird_x + 130, bird_y + 895, bird_x + 125, bird_y + 880);

   iLine(bird_x + 155, bird_y + 880, bird_x + 140, bird_y + 860);
   iLine(bird_x + 125, bird_y + 880, bird_x + 115, bird_y + 865);

   iLine(bird_x + 140, bird_y + 860, bird_x + 100, bird_y + 855);
   iLine(bird_x + 115, bird_y + 865, bird_x + 100, bird_y + 855);
  }


  iSetColor(0, 0, 0);
  iLine(bird_x + 140, bird_y + 860, bird_x + 130, bird_y + 850);
  iLine(bird_x + 130, bird_y + 850, bird_x + 140, bird_y + 840);
  iLine(bird_x + 135, bird_y + 845, bird_x + 130, bird_y + 840);

  iLine(bird_x + 130, bird_y + 860, bird_x + 120, bird_y + 850);
  iLine(bird_x + 120, bird_y + 850, bird_x + 130, bird_y + 840);
  iLine(bird_x + 125, bird_y + 845, bird_x + 120, bird_y + 840);


  
  iSetColor(0, 255,0);
  iFilledEllipse(bird_x + 202, bird_y + 900, 3, 3);




  
  
  iSetColor(20, 20, 255);
iLine(arrow_x + 1650, arrow_y + string_y + 820, arrow_x + 1650, arrow_y + 1000);
  iLine(arrow_x + 1650, arrow_y + string_y + 820, arrow_x + 1651, arrow_y + 1000);
  iLine(arrow_x + 1643, arrow_y + 993, arrow_x + 1650, arrow_y + 1000);
  iLine(arrow_x + 1657, arrow_y + 993, arrow_x + 1650, arrow_y + 1000);

  iLine(arrow_x + string_x + 2062, arrow_y + string_y + 189, arrow_x + 2140, arrow_y + 350);
  iLine(arrow_x + 2132, arrow_y + 346, arrow_x + 2140, arrow_y + 350);
  iLine(arrow_x + 2144, arrow_y + 342, arrow_x + 2140, arrow_y + 350);

  iLine(arrow_x + string_x + 2262, arrow_y + string_y + 789, arrow_x + 2340, arrow_y + 950);
  iLine(arrow_x + 2332, arrow_y + 946, arrow_x + 2340, arrow_y + 950);
  iLine(arrow_x + 2344, arrow_y + 942, arrow_x + 2340, arrow_y + 950);

  iLine(arrow_x + string_x + 1137, arrow_y + string_y + 689, arrow_x + 1060, arrow_y + 850);
  iLine(arrow_x + 1056, arrow_y + 840, arrow_x + 1060, arrow_y + 850);
  iLine(arrow_x + 1072, arrow_y + 845, arrow_x + 1060, arrow_y + 850);
   

  
 }

 else if (instruction == true)
 {
  iSetColor(0, 0, 0);
  iFilledRectangle(0, 0, 1910, 1050);
  iSetColor(0, 255, 0);
  iText(800, 900, "BIRD HUNTING", GLUT_BITMAP_TIMES_ROMAN_24);
  iSetColor(0, 255, 0);
  iText(100, 800, "GAME INFO and CONTROL: The game is developed using only C++ programming language and the title of the game is \"Bird Hunting\". In this game you can control", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 750, "your bow by right and left key and keep it in threee different direction. You get a primary arrow attached with bow and 5 more arrow beside the bow. You can adjust ", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 700, "your bow string according to your need of speed. To do this you have to use up and down key before release your arrow. You will release your arrow by using \"R\" key. ", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 600, "REWARDS and OPPORTUNITIES : You will be given specific number of birds locating after \"birds remaining\" term initially.  If you will able to hunt it or it will disappeare", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 550, "then it meaans 1 bird has gone. By hunting one general bird (Blue) you will get 1 points. By hunting a special gold bird (Golden) you will get  extra 5 points. If you hunt ", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 500, "a devil bird (Red) you will lost an arrow with no benefit. If you can make a headshot you will get extra 5 points. Remember that, even headshot is not applicable to Devil", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 450, "bird. The game will over when you will have no arrow left or no bird remaining.", GLUT_BITMAP_TIMES_ROMAN_24);
  iText(100, 400, "", GLUT_BITMAP_TIMES_ROMAN_24);
  
  iSetColor(255, 255, 255);
  iFilledRectangle(1690, 70, 200, 80);
  iSetColor(0, 0, 0);
  iText(1750, 100, "BACK", GLUT_BITMAP_TIMES_ROMAN_24);
 }

 else if (dev == true)
 {
  iSetColor(0, 0, 0);
  iFilledRectangle(0, 0, 1910, 1050);
  iSetColor(255, 0, 255);
  iText(900, 600, "Shakil Hiat", GLUT_BITMAP_TIMES_ROMAN_24);
  iSetColor(255, 255, 255);
  iFilledRectangle(1690, 70, 200, 80);
  iSetColor(0,0, 0);
  iText(1750, 100, "BACK", GLUT_BITMAP_TIMES_ROMAN_24);
 }

 else if (start == true)
 {


  iSetColor(0, 50, 50);
  iFilledRectangle(0, 0, 1910, 1050);


  iSetColor(0, 50, 50);
  iFilledRectangle(40, 70, 200, 80);
  iSetColor(255, 255, 0);
  iText(100, 100, "PAUSE", GLUT_BITMAP_TIMES_ROMAN_24);

  iSetColor(0, 50, 50);
  iFilledRectangle(1690, 70, 200, 80);
  iSetColor(255, 255, 0);
  iText(1750, 100, "QUIT", GLUT_BITMAP_TIMES_ROMAN_24);


  if (bird_x == 0)
  {
   special_bird = rand() % 6;
  }
  if (special_bird == gold)
  {

   iSetColor(255, 255, 255);
   iCircle(105, 600, 70);
   iCircle(105, 600, 67);
   iSetColor(255, 255, 0);
   iText(55, 589, "Gold Bird", GLUT_BITMAP_TIMES_ROMAN_24);


   iSetColor(255, 255, 0);

   iLine(bird_x + 205, bird_y + 885, bird_x + 215, bird_y + 882);

   iLine(bird_x + 210, bird_y + 895, bird_x + 215, bird_y + 882);

   iLine(bird_x + 210, bird_y + 895, bird_x + 213, bird_y + 905);


